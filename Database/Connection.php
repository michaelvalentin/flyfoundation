<?phpnamespace Flyf\Database;use \Flyf\Core\Config;class Connection {	private static $connection;	private $hostname;	private $username;	private $password;	private $database;	private $charset;	private $pdo;	private $statement;	private function __construct() {		$this->hostname = Config::GetValue("database_hostname");		$this->username = Config::GetValue("database_username");		$this->password = Config::GetValue("database_password");		$this->database = Config::GetValue("database_database");		$this->charset = Config::GetValue("database_charset");	}	public static function GetConnection() {		if (!self::$connection) {			self::$connection = new Connection();		}				return self::$connection;	}	public function Connect() {		if (!$this->pdo) {			$this->pdo = new \PDO(				'mysql:host='.$this->hostname.';dbname='.$this->database.';', 				$this->username, 				$this->password			);			$this->pdo->setAttribute(\PDO::ATTR_ERRMODE, \PDO::ERRMODE_EXCEPTION);		}	}	public function Disconnect() {		$this->pdo = null;		$this->statement = null;	}	public function Prepare($query) {		$this->statement = $this->pdo->prepare($query);	}	public function ExecuteQuery() {		$this->statement->execute();		return array(			'result' => $this->statement->fetchAll(\PDO::FETCH_ASSOC),			'last_insert_id' => 0,			'row_count' => $this->statement->rowCount(),		);	}		public function ExecuteNonQuery() {		$this->statement->execute();		return array(			'result' => array(),			'last_insert_id' => $this->pdo->lastInsertID(),			'row_count' => $this->statement->rowCount(),		);	}	public function Bind($params) {		foreach ($params as $key => $value) {			$this->statement->bindValue($key, $value);		}	}}